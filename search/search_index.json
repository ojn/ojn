{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"www.ojn.ovh!","text":"<p>This is my unsorted digital notebook, powered by mdzk a static site generator for Zettelkasten notes written in Markdown. </p> <p>So far this website doesn't provide an RSS or Atom feed.</p> <p>Useful helper one-liners</p> <p>Some small notes about office software</p> <p>Writing Mallard docs with pug.</p> <p>Read more about my use of [[mdzk]].</p>"},{"location":"Mallard%20docs/","title":"Mallard docs","text":"<p>Mallard is an awkward duck, it is written in XML and therefore can be hard to write.</p> <p>Fortunately we can take our \"small dog\" to \"hunt the Duck\". </p> <p>Pug (aka jade) is a CLI tool and a kind of shorthand for writing xml/html documents. </p> <p>To get started install Node.js:</p> <p>install Node.js</p> <pre><code>sudo apt install nodejs\n</code></pre> <p>install pug and pug-cli</p> <pre><code>sudo npm install -g pug &amp;&amp; sudo npm install -g pug-cli\n</code></pre> <p>create a pug settings directory</p> <pre><code>mkdir ~/.pug\n</code></pre> <p>specify options for mallard page format</p> <pre><code>echo '{\"doctype\": \"page\"}' &gt; ~/.pug/options-page.json\n</code></pre> <p>provide localtion of the options file, add file extension with -E and -P flag for pretty</p> <pre><code>pug -O ~/.pug/options-page.json -E \"page\" -P\n</code></pre> <p>put it in your bashrc alias</p> <pre><code>alias ppage='pug -O ~/.pug/options-page.json -E \"page\" -P'\n</code></pre> <p>convert your new page</p> <pre><code>ppage new-page.page\n</code></pre> <p>previewing documentation</p> <pre><code>yelp --editor-mode new-page.page\n</code></pre> <p>Pug is indentation sensitive, if you are using VS Code it is recomended to use something like indent-rainbow plugin as well as jadeview (to convert existing xml/html i.e .page files to .jade/.pug). </p> <ul> <li>Pug</li> <li>Mallard Project</li> </ul>"},{"location":"RSS%20or%20Atom%20feed/","title":"RSS or Atom feed","text":"<p>Simple useful thing for your website to publish updates to the readers. </p> <p>To make your RSS feed discoverable, put this HTML snippet in the head part of your document (HTML or a template file )</p> <pre><code>&lt;link rel=\"alternate\" type=\"application/rss+xml\" title=\"Example RSS\" href=\"https://www.example.com/index.xml\"&gt;\n</code></pre>"},{"location":"helper%20one-liners/","title":"Helper one liners","text":"<p>Here are some useful one-liners, you can put these in your shell aliases or scripts:</p> <p>quickly access your note files with grep, rofi, xargs and micro </p> <pre><code>ls -p ~/Notes/ | grep -v / | rofi -dmenu | xargs -I {} micro ~/Notes/{}\n</code></pre> <p>show ascii representations</p> <pre><code>man ascii | grep -m 1 -A 63 --color=never Oct\n</code></pre> <p>convert youtube channels and users into RSS in your newsboat subscription list</p> <pre><code>sed -i \"s/channel\\//feeds\\/videos.xml\\?channel_id=/g\" $HOME/.newsboat/urls ; sed -i \"s/user\\//feeds\\/videos.xml\\?user=/g\" $HOME/.newsboat/urls\n</code></pre> <p>put tree of files into html</p> <pre><code>tree -H '.' -L 1 --noreport --charset utf-8 &gt; index.html\n</code></pre> <p>burn iso or img image of your Linux distribution</p> <pre><code>sudo dd if=./image.img of=/dev/sdh bs=4M status=progress &amp;&amp; sync\n</code></pre> <p>use a virtual Python environment</p> <pre><code>python3 -m venv env &amp;&amp; source env/bin/activate\n</code></pre> <p>trim with ffmpeg from 00:01:00.000 to the end of a file</p> <pre><code>ffmpeg -i input.mp3 -ss 00:01:00.000 -acodec copy output.mp3\n</code></pre> <p>trim with ffmpeg from 00:01:00.000 for 5 minutes</p> <pre><code>ffmpeg -i input.mp3 -ss 00:01:00.000 -t 300 -acodec copy output.mp3\n</code></pre> <p>convert json to yaml with python</p> <pre><code>python3 -c 'import json, sys, yaml ; y=yaml.safe_load(sys.stdin.read()) ; print(json.dumps(y))'\n</code></pre>"},{"location":"screen/","title":"screen","text":"<p>to prevent screensaver from kicking in, create no-screensaver.desktop file in <code>~/.config/autostart</code> with following: </p> <pre><code>[Desktop Entry]\nType=Application\nExec=xset -dpms s off s noblank s 0 0 s noexpose\nHidden=false\nName=No screensaver\n</code></pre> <p>to check if you are using X or Wayland: </p> <pre><code>echo \\$XDG_SESSION_TYPE\n</code></pre>"},{"location":"small%20notes/","title":"Small Notes","text":"<p>With LibreOffice you can save files to .fodt (flat odt format) to keep it in sync with version control system like Git</p> <p>Okular can search for inline comments in PDF but not popup notes, you can even annotate other files like djvu fith it.</p>"}]}